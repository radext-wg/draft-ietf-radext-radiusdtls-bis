{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-08-01T00:44:28.063353+00:00",
  "repo": "radext-wg/draft-ietf-radext-radiusdtls-bis",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOLrzygc6HDCk-",
      "title": "Add / update text on UDP -> TCP and TCP -> UDP proxying issues",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/issues/2",
      "state": "OPEN",
      "author": "alandekok",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "6613 etc. discuss UDP to TCP, but not TCP to UDP.\r\n\r\nPlus, there's the whole issue of Accounting-Request and Acct-Delay-Time being updated on retransmits.  Which contributes to congestive collapse when doing UDP to TCP proxying.\r\n\r\nFor TCP to UDP, it may be rarer, but it's possible.  Should the proxy then take care of retransmitting packets over UDP?\r\n\r\nI need to suggest some text.",
      "createdAt": "2024-04-26T12:50:13Z",
      "updatedAt": "2024-04-26T15:51:04Z",
      "closedAt": null,
      "comments": [
        {
          "author": "alandekok",
          "authorAssociation": "CONTRIBUTOR",
          "body": "RFC 2866 says:\r\n\r\n```\r\n A forwarding server may either perform its forwarding function in a\r\n   pass through manner, where it sends retransmissions on as soon as it\r\n   gets them, or it may take responsibility for retransmissions, for\r\n   example in cases where the network link between forwarding and remote\r\n   server has very different characteristics than the link between NAS\r\n   and forwarding server.\r\n```\r\n\r\nAlex Clouter also mentioned we have the same issue on TCP -> TCP proxying, if the two connections have different throughputs",
          "createdAt": "2024-04-26T15:51:03Z",
          "updatedAt": "2024-04-26T15:51:03Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOLrzygc5sWeGl",
      "title": "Add text around Server Name Indication",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/pull/1",
      "state": "OPEN",
      "author": "Janfred",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "SNI was not part of RFC6614 or RFC7360.\r\n\r\nThis is possibly breaking backwards compatibility, so I don't want to change this without a discussion within the WG.\r\n\r\nThis Pull Request can be used to comment on aspects of the text.",
      "createdAt": "2024-04-11T11:54:05Z",
      "updatedAt": "2024-07-08T17:54:15Z",
      "baseRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "baseRefName": "main",
      "baseRefOid": "97c3d68c2250b7970014b23aa2793f1de3d88ea5",
      "headRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "headRefName": "feature_server_name_indication",
      "headRefOid": "7d83c0346f5b7c8cbe4f49fa2280f16c872d11fd",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLrzygc523DiS",
          "commit": {
            "abbreviatedOid": "d7a8074"
          },
          "author": "alandekok",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-11T13:07:24Z",
          "updatedAt": "2024-04-11T13:07:24Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "TLS servers _may_ be hidden behind a load balancer.",
              "createdAt": "2024-04-11T13:07:24Z",
              "updatedAt": "2024-04-11T13:07:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc523E9V",
          "commit": {
            "abbreviatedOid": "d7a8074"
          },
          "author": "alandekok",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-11T13:10:09Z",
          "updatedAt": "2024-04-11T13:10:10Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "What about 7585, where the destination IP isn't known in advance?\r\n\r\nI think it's preferable to base server identity on the presented server credentials.  i.e. the certificate, and not any IP/port information.\r\n\r\nThat is, we have multiple connections to the same server certificate (or similar certificate identification fields), then the client should treat all of those connections as being similar.",
              "createdAt": "2024-04-11T13:10:09Z",
              "updatedAt": "2024-04-11T13:10:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc523FKx",
          "commit": {
            "abbreviatedOid": "d7a8074"
          },
          "author": "alandekok",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-11T13:10:32Z",
          "updatedAt": "2024-04-11T13:10:33Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "This seems backwards to me?  Is this a typo, or am I missing something?",
              "createdAt": "2024-04-11T13:10:33Z",
              "updatedAt": "2024-04-11T13:10:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc523GPL",
          "commit": {
            "abbreviatedOid": "d7a8074"
          },
          "author": "alandekok",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-11T13:12:34Z",
          "updatedAt": "2024-04-11T13:12:34Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "It's less about SNI than presented certificate, I think.  The distinction is important.\r\n\r\nOnce a client verifies the server identity (and that it matches the SNI), then it's possible to put all similar connections into a connection pool.  And it's OK to key that off of the SNI string, but I think it should be clear that it's being based off of the _identity_ , and not the SNI.",
              "createdAt": "2024-04-11T13:12:34Z",
              "updatedAt": "2024-04-11T13:12:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc523G8C",
          "commit": {
            "abbreviatedOid": "7d83c03"
          },
          "author": "alandekok",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-11T13:13:52Z",
          "updatedAt": "2024-04-11T13:13:52Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I'm not clear how a server can \"distinguish clients\" by SNI.  Perhaps instead just \"present different identities to clients based on SNI\". ",
              "createdAt": "2024-04-11T13:13:52Z",
              "updatedAt": "2024-04-11T13:13:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc52_KIR",
          "commit": {
            "abbreviatedOid": "7d83c03"
          },
          "author": "Janfred",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-12T09:00:49Z",
          "updatedAt": "2024-04-12T09:00:49Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "How about this:\r\n\r\n```suggestion\r\nBy adding Server Name Indication, a RAIDUS/(D)TLS server can now provide different services (i.e. access to different roaming consortia) under the same destination IP address and port, or could present different certificates to clients or apply specific policies depending the server name the clients use in the SNI extension of the TLS Client Hello.\r\n```",
              "createdAt": "2024-04-12T09:00:49Z",
              "updatedAt": "2024-04-12T09:00:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc52_Mli",
          "commit": {
            "abbreviatedOid": "d7a8074"
          },
          "author": "Janfred",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-12T09:04:45Z",
          "updatedAt": "2024-04-12T09:04:45Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "See discussion on the ML on that one:\r\nhttps://mailarchive.ietf.org/arch/msg/radext/pX1cn_RnaRnqeu5MBXc-sohK_SQ",
              "createdAt": "2024-04-12T09:04:45Z",
              "updatedAt": "2024-04-12T09:04:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc52_NCK",
          "commit": {
            "abbreviatedOid": "d7a8074"
          },
          "author": "Janfred",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-12T09:05:44Z",
          "updatedAt": "2024-04-12T09:05:45Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nFor RADIUS/(D)TLS, this distinction is not that simple, i.e. because different RADIUS servers may be hidden behind a load balancer with one public IP address, and the load balancer dispatches the connections based on the Server Name Indication in the first TLS handshake record.\r\n```",
              "createdAt": "2024-04-12T09:05:44Z",
              "updatedAt": "2024-04-12T09:05:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc53B5ys",
          "commit": {
            "abbreviatedOid": "7d83c03"
          },
          "author": "mcr",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-12T13:18:09Z",
          "updatedAt": "2024-04-12T13:18:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOLrzygc5v_-MV",
      "title": "try to address proxying issues.  Helps with #2",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/pull/3",
      "state": "MERGED",
      "author": "alandekok",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "My initial stab at addressing the proxying issues.",
      "createdAt": "2024-05-20T20:26:01Z",
      "updatedAt": "2024-07-08T17:49:22Z",
      "baseRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "baseRefName": "main",
      "baseRefOid": "0e3b595bd851c9e1fcf4e0bd227f269f8609754e",
      "headRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "headRefName": "issue2",
      "headRefOid": "5d64d5f3f674c55f0e4f9293f3388898d3566bbc",
      "closedAt": "2024-07-08T17:49:21Z",
      "mergedAt": "2024-07-08T17:49:21Z",
      "mergedBy": "Janfred",
      "mergeCommit": {
        "oid": "36cab8101d92b069730f390e8251f3f2a44d5ea1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDOLrzygc52L816",
      "title": "apply RFC9525 guidance for validating certificate identities",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/pull/4",
      "state": "OPEN",
      "author": "fmauchle",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "RFC9525 provides guidance on what/how to specify certificate identity validation. This PR applies those rules and references RFC9525 explicitly. \r\n\r\nIn addition the NAIrealm identity is generalized as it might be applied outside dynamic discovery.",
      "createdAt": "2024-07-23T09:00:17Z",
      "updatedAt": "2024-07-26T18:39:26Z",
      "baseRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "baseRefName": "main",
      "baseRefOid": "14ac56b2132bc2989536d94cea917dad71539bf0",
      "headRepository": "fmauchle/draft-ietf-radext-radiusdtls-bis",
      "headRefName": "fmauchle-rfc9525-guidance",
      "headRefOid": "ba9b92b9b6a8a8252c8c9dbebd3c64de8ec5f48a",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "fmauchle",
          "authorAssociation": "NONE",
          "body": "Regarding the 'Selfie attack' discussion on the radext mailing list, this prposal might need an update too, related to omitting the identity check... ",
          "createdAt": "2024-07-25T11:20:15Z",
          "updatedAt": "2024-07-25T11:20:15Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 5,
      "id": "PR_kwDOLrzygc52M_3H",
      "title": "unify idle-timeout between TLS and DTLS",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/pull/5",
      "state": "OPEN",
      "author": "fmauchle",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "TLS and DTLS specify idle timeout and session limits with different levels of detail. Those limits should apply to both equally.",
      "createdAt": "2024-07-23T11:31:57Z",
      "updatedAt": "2024-07-26T18:04:55Z",
      "baseRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "baseRefName": "main",
      "baseRefOid": "14ac56b2132bc2989536d94cea917dad71539bf0",
      "headRepository": "fmauchle/draft-ietf-radext-radiusdtls-bis",
      "headRefName": "fmauchle-idle-timeout",
      "headRefOid": "7efae6bceb6ed11212a611d2e8da900d12e48870",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLrzygc6CydbS",
          "commit": {
            "abbreviatedOid": "3948044"
          },
          "author": "Janfred",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks for your input. Highly appreciated. See the comments in the review",
          "createdAt": "2024-07-23T15:03:42Z",
          "updatedAt": "2024-07-23T15:23:05Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "I can imagine that this can lead to problems.\r\n\r\nOne would be Reverse-CoA where you rely on sending the CoA packet \"backwards\" through RAIDUS/(D)TLS and that doesn't work if the client is behind a NAT, unless the connection stays open.\r\n\r\nThe second would be monitoring.\r\nIf you have a number of Service Providers, all behind a NAT, then the only good monitoring for Liveness of the SP is \"does the server have a (D)TLS session with this client\"\r\nIf the client would just close it, then this monitoring would not be possible anymore.\r\n\r\nI would suggest: Replace `SHOULD` with `MAY` and add some text like `[...], the configuration SHOULD allow to disable the idle timeout session shutdown`",
              "createdAt": "2024-07-23T15:03:42Z",
              "updatedAt": "2024-07-23T15:23:05Z"
            },
            {
              "originalPosition": 6,
              "body": "I don't understand this last sentence (and unfortunately I can't infer from context what word is missing)",
              "createdAt": "2024-07-23T15:19:46Z",
              "updatedAt": "2024-07-23T15:23:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc6CzkYv",
          "commit": {
            "abbreviatedOid": "3948044"
          },
          "author": "alandekok",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-23T17:00:15Z",
          "updatedAt": "2024-07-23T17:00:15Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "maybe add a note about reverse CoA, and say also that systems SHOULD leave at least one connection open, to avoid delays opening new connections when traffic goes from zero to >0",
              "createdAt": "2024-07-23T17:00:15Z",
              "updatedAt": "2024-07-23T17:00:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc6DEgTC",
          "commit": {
            "abbreviatedOid": "3948044"
          },
          "author": "fmauchle",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T11:05:23Z",
          "updatedAt": "2024-07-25T11:05:23Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Ah, mabye its just the type r/from/form/, but the point was to emphasize that current setups often use long-lived TLS connections.\r\n\r\nI will try to reword...",
              "createdAt": "2024-07-25T11:05:23Z",
              "updatedAt": "2024-07-25T11:05:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc6DElT9",
          "commit": {
            "abbreviatedOid": "3948044"
          },
          "author": "fmauchle",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T11:16:07Z",
          "updatedAt": "2024-07-25T11:16:07Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Have to get a bit more into Reverse-CoA.\r\n\r\nI guess in the end this puts even more emphasis on the statement to which values to use:  'it very much depends...'. There is no one size fits all here.",
              "createdAt": "2024-07-25T11:16:07Z",
              "updatedAt": "2024-07-25T11:16:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc6DKax2",
          "commit": {
            "abbreviatedOid": "3948044"
          },
          "author": "Janfred",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T22:08:20Z",
          "updatedAt": "2024-07-25T22:08:20Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "ok, I think the from/form correction clarifies what is meant.\r\nLet's see what the WG says",
              "createdAt": "2024-07-25T22:08:20Z",
              "updatedAt": "2024-07-25T22:08:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLrzygc6DRqCa",
          "commit": {
            "abbreviatedOid": "3948044"
          },
          "author": "fmauchle",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-26T18:04:55Z",
          "updatedAt": "2024-07-26T18:04:55Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "I think advising cilents to keep a connection open would be a bit misplaced in _this_ document (e.g. with dynamic discovery it might not be apropriate), but its very valid to acknowledge that some scenarios do require it.\r\n\r\nA quick cross-read of reverse-CoA, it might more clearly state that the client MUST keep at least one conneciton open (it's kind of implied, but not clearly stated).",
              "createdAt": "2024-07-26T18:04:55Z",
              "updatedAt": "2024-07-26T18:04:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOLrzygc52OTP7",
      "title": "move TLS response cache invalidation to common section",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/pull/6",
      "state": "OPEN",
      "author": "fmauchle",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Invalidation of response cache applies to both TLS and DTLS since both are TLS session based. Move paragraph to the common section.",
      "createdAt": "2024-07-23T14:20:26Z",
      "updatedAt": "2024-07-24T16:29:31Z",
      "baseRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "baseRefName": "main",
      "baseRefOid": "14ac56b2132bc2989536d94cea917dad71539bf0",
      "headRepository": "fmauchle/draft-ietf-radext-radiusdtls-bis",
      "headRefName": "fmauchle-response-cache",
      "headRefOid": "92ce41898e586c140a12050c9c68ffeebe760e3d",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "alandekok",
          "authorAssociation": "CONTRIBUTOR",
          "body": "```\r\nSince the client connection is closed, those responses from the home server to the proxy server SHOULD be silently discarded by the proxy\r\n```\r\n\r\nMaybe make this MUST?  If the home server replies, there's no way for the proxy to send the packet anywhere.",
          "createdAt": "2024-07-23T17:03:07Z",
          "updatedAt": "2024-07-23T17:03:07Z"
        },
        {
          "author": "fmauchle",
          "authorAssociation": "NONE",
          "body": "> Maybe make this MUST? If the home server replies, there's no way for the proxy to send the packet anywhere.\r\n\r\nAgreed; updated.",
          "createdAt": "2024-07-24T16:29:30Z",
          "updatedAt": "2024-07-24T16:29:30Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 7,
      "id": "PR_kwDOLrzygc52OyfL",
      "title": "unify session resumption",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/pull/7",
      "state": "OPEN",
      "author": "fmauchle",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "TLS session resumption is currently a SHOULD requirement for DTLS and for TLS-PSK.\r\n\r\nUnify this recommendation for all use of (D)TLS and provide guidance for re-authorization as proposed by TLS-PSK.",
      "createdAt": "2024-07-23T15:22:02Z",
      "updatedAt": "2024-07-24T16:22:28Z",
      "baseRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "baseRefName": "main",
      "baseRefOid": "14ac56b2132bc2989536d94cea917dad71539bf0",
      "headRepository": "fmauchle/draft-ietf-radext-radiusdtls-bis",
      "headRefName": "fmauchle-session-resumption",
      "headRefOid": "28da1b8ed627e6d410f89d907c9f0dc68fd5f7e9",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "alandekok",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've be in favor of making it a MUST.  I don't see any benefit for an implementation to _not_ implement resumption.",
          "createdAt": "2024-07-23T17:01:57Z",
          "updatedAt": "2024-07-23T17:01:57Z"
        },
        {
          "author": "fmauchle",
          "authorAssociation": "NONE",
          "body": "> I've be in favor of making it a MUST. I don't see any benefit for an implementation to _not_ implement resumption.\r\n\r\nI vote against a MUST. The benefit for implementos is saving time and effort (if a particular device or application is unlikely to gain much from it, thinking of Wifi APs rather just keep a connection open at all times). And _not_ implementing it doesn't break anything.",
          "createdAt": "2024-07-24T16:22:27Z",
          "updatedAt": "2024-07-24T16:22:27Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 8,
      "id": "PR_kwDOLrzygc52Xkvx",
      "title": "Edits to grammar/spelling.",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/pull/8",
      "state": "OPEN",
      "author": "ethan-thompson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Grammatical edits as per my comments in the mailing list.",
      "createdAt": "2024-07-24T17:08:36Z",
      "updatedAt": "2024-07-24T17:08:36Z",
      "baseRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "baseRefName": "main",
      "baseRefOid": "14ac56b2132bc2989536d94cea917dad71539bf0",
      "headRepository": "ethan-thompson/draft-ietf-radext-radiusdtls-bis",
      "headRefName": "ethompson-grammar-edits",
      "headRefOid": "4c4f7e86e4f0eed27e468a3f59741032c6a1e9a0",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 9,
      "id": "PR_kwDOLrzygc52Xohl",
      "title": "Update draft-ietf-radext-radiusdtls-bis.md flow",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/pull/9",
      "state": "OPEN",
      "author": "ethan-thompson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I believe \"if no matches exist\" flows better in the text.",
      "createdAt": "2024-07-24T17:17:48Z",
      "updatedAt": "2024-07-25T09:55:49Z",
      "baseRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "baseRefName": "main",
      "baseRefOid": "14ac56b2132bc2989536d94cea917dad71539bf0",
      "headRepository": "ethan-thompson/draft-ietf-radext-radiusdtls-bis",
      "headRefName": "Edits-to-text-flow",
      "headRefOid": "8bc754363c6fada03b5b62a2b7e1024aace4e35f",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "fmauchle",
          "authorAssociation": "NONE",
          "body": "These statements (matching CN) are obsoleted by RFC9525 anyway. PR #4 (should we accept it) removes them completely. ",
          "createdAt": "2024-07-25T09:55:48Z",
          "updatedAt": "2024-07-25T09:55:48Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 10,
      "id": "PR_kwDOLrzygc52XqPe",
      "title": "Update draft-ietf-radext-radiusdtls-bis.md clarity",
      "url": "https://github.com/radext-wg/draft-ietf-radext-radiusdtls-bis/pull/10",
      "state": "OPEN",
      "author": "ethan-thompson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Clarifying that a bad RADIUS secret could be caused by a misbehaving party OR a misconfigured one.",
      "createdAt": "2024-07-24T17:22:44Z",
      "updatedAt": "2024-07-24T17:22:44Z",
      "baseRepository": "radext-wg/draft-ietf-radext-radiusdtls-bis",
      "baseRefName": "main",
      "baseRefOid": "14ac56b2132bc2989536d94cea917dad71539bf0",
      "headRepository": "ethan-thompson/draft-ietf-radext-radiusdtls-bis",
      "headRefName": "misbehaving-or-misconfigured-party",
      "headRefOid": "2eec15be8d84d7a7dca662e858d100eac849854c",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}